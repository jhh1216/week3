Dart 언어의 배경

개발 목적: 자바스크립트를 대체하기 위해 구글이 만든 언어

처음엔 실패 → 2017년 플러터 출시 후 급성장

현재: 플러터의 인기와 함께 지속 성장, 구글의 적극 지원

실습 환경

DartPad 사용 → 웹 브라우저에서 바로 코드 실행 가능

void main() {
  print('Hello, Dart!');
}

핵심 문법 정리

변수 & 타입

var → 타입 추론, String name → 명시적 선언

Null Safety → String?으로 nullable 변수 사용

데이터 타입

숫자(int, double), 문자열, List, Set, Map 활용

연산자

산술, 비교, 삼항 연산자, null 병합 연산자 (??)

제어문

if/else, switch, for, while

함수

위치 매개변수, 이름 매개변수 지원

객체지향

클래스, 생성자, 메서드 정의

상속(extends)과 메서드 오버라이딩 지원

Dart 3.x 신기능

레코드(Records): 여러 값 묶기

패턴 매칭: switch 문에서 다양한 데이터 구조 분해 가능

느낀 점

이번 주차에서는 Dart 언어가 플러터 개발의 핵심이라는 점을 확실히 이해했다.
